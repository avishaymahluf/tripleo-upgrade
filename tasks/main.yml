---
# tasks file for tripleo-upgrade
- name: create upgrade scripts
  include: create-scripts.yaml
  tags: create_upgrade_scripts

- block:
    - name: apply pre undercloud upgrade workarounds
      command: "{{working_dir}}/pre_undercloud_upgrade_workarounds.sh"
      when: upgrade_workarounds

    - name: upgrade undercloud
      shell: "bash {{ undercloud_upgrade_script }} &> undercloud_upgrade.log"
      tags: undercloud_upgrade

    - name: validate undercloud upgrade
      include: undercloud_validate_upgrade.yaml
      tags: undercloud_upgrade_validate

    - name: apply post undercloud upgrade workarounds
      command: "{{working_dir}}/post_undercloud_upgrade_workarounds.sh"
      when: upgrade_workarounds
  when: undercloud_upgrade or undercloud_update

- block:
    - name: apply pre docker composable upgrade workarounds
      command: "{{working_dir}}/pre_docker_composable_upgrade_workarounds.sh"
      when: upgrade_workarounds

    # TODO: move this out of upgrade
    - name: download container images
      include: container_images.yaml
      tags: container_images

    - name: create local docker registry environment file
      include: local_docker_registry_env.yaml
      tags: local_docker_registry

    - include: docker_composable_upgrade.yml
      tags: docker_composable_upgrade

    - name: apply pre nova compute upgrade workarounds
      command: "{{working_dir}}/pre_nova_compute_upgrade_workarounds.sh"
      when: upgrade_workarounds

    - name: upgrade nova compute nodes
      include: node_upgrade.yml
      with_items: "{{ groups.compute|default([]) }}"
      loop_control:
          loop_var: node_name
      tags: nova_compute_upgrade

# gather facts to avoid failing on expired facts on deployments containing
# larger number of nodes
    - setup:

    - name: apply pre docker upgrade converge workarounds
      command: "{{working_dir}}/pre_docker_converge_upgrade_workarounds.sh"
      when: upgrade_workarounds

    - include: docker_converge_upgrade.yml

    - name: apply post docker upgrade converge workarounds
      command: "{{working_dir}}/post_docker_converge_upgrade_workarounds.sh"
      when: upgrade_workarounds
  when: overcloud_upgrade
