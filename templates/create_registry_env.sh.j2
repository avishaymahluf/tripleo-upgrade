#!/bin/bash
#
# Create environment file with the registry used by the overcloud nodes
set -euo pipefail

{% if upstream_container_images  %}
openstack overcloud container image prepare \
  --tag latest \
  --env-file {{ containers_default_parameters }} \
{% if use_local_docker_registry  %}
  --namespace={{ ansible_br_ctlplane.ipv4.address }}:8787/tripleoupstream
echo >> {{ containers_default_parameters }} '  DockerInsecureRegistryAddress: {{ ansible_br_ctlplane.ipv4.address }}:8787'
{% else %}
{% if docker_registry_url != 'registry.example.local' %}
  --namespace {{ docker_registry_url }}/tripleoupstream
{% else %}
  --namespace tripleoupstream
{% endif %}
{% endif %}
{% else %}
REPO="$(find /etc/yum.repos.d/ -iname 'rhos-release-??.*')"
REPO_URL="$(grep -B2 enabled=1 $REPO | grep -m1 puddle | sed -E 's/.*(http.*[0-9]-RHEL-.\/).*/\1/')"
TAG="$(curl -s -N -L $REPO_URL/latest_containers/container_images.yaml|awk -F':' '/imagename/ {print $NF; exit}')"
{% if docker_registry_url != 'registry.example.local' %}
REGISTRY='{{ docker_registry_url }}'
{% else %}
REGISTRY="$(curl -s -N -L $REPO_URL/latest_containers/container_images.yaml | grep pull_source | uniq | awk {'print $2'})"
{% endif %}
openstack overcloud container image prepare \
  --env-file={{ containers_default_parameters }} \
  --prefix=openstack- \
  --suffix=-docker \
  --tag="$TAG" \
{% if use_local_docker_registry  %}
  --namespace={{ ansible_br_ctlplane.ipv4.address }}:8787/rhosp12
echo >> {{ containers_default_parameters }} '  DockerInsecureRegistryAddress: {{ ansible_br_ctlplane.ipv4.address }}:8787'
echo >> {{ containers_default_parameters }} '  DockerCephDaemonImage: {{ ansible_br_ctlplane.ipv4.address }}:8787/ceph/rhceph-2-rhel7:latest'
{% else %}
  --namespace=$REGISTRY/rhosp12
echo >> {{ containers_default_parameters }} "  DockerInsecureRegistryAddress: $REGISTRY"
echo >> {{ containers_default_parameters }} "  DockerCephDaemonImage: $REGISTRY/ceph/rhceph-2-rhel7:latest"
{% endif %}
{% endif %}
